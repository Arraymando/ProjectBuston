{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arman\\\\OneDrive\\\\Bureaublad\\\\JSprojects\\\\project_buston\\\\projectbuston\\\\client\\\\src\\\\phase1\\\\Red or black.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RedorBlack = props => {\n  const {\n    payload\n  } = props;\n  const {\n    // to do: onnodige prop-attributes verwijderen\n    getRandomCard,\n    cardDeck,\n    randomCard,\n    redOrBlackCorrect,\n    setCorrectCounter,\n    correctCounter,\n    playerHand,\n    setPlayerHand,\n    correct,\n    setCorrect\n  } = payload;\n  const updateHand = randomCard => {\n    setPlayerHand({\n      ...playerHand,\n      cards: [...playerHand.cards, {\n        randomCard\n      }]\n    });\n    console.log(playerHand);\n  };\n  console.log(\"testpunt 1\");\n  function CorrectComponent() {\n    return correct;\n  }\n  const redOrBlackChecker = color => {\n    getRandomCard();\n    console.log(\"testpunt 2\");\n    if (color === \"red\" && (randomCard.sort === \"hearts\" || randomCard.sort === \"diamonds\")) {\n      updateHand(randomCard);\n      setCorrect( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"That is correct!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this));\n      return;\n    } else {\n      updateHand(randomCard);\n      setCorrect( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"That is incorrect!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }, this));\n    }\n    if (color === \"black\" && (randomCard.sort === \"clubs\" || randomCard.sort === \"spades\")) {\n      updateHand(randomCard);\n      setCorrect( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"That is correct!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this));\n      return;\n    } else {\n      updateHand(randomCard);\n      setCorrect( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"That is incorrect!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"is the next card\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => redOrBlackChecker(\"red\"),\n        children: \"Red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), \" of\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => redOrBlackChecker(\"black\"),\n        children: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \"?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CorrectComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = RedorBlack;\nvar _c;\n$RefreshReg$(_c, \"RedorBlack\");","map":{"version":3,"names":["RedorBlack","props","payload","getRandomCard","cardDeck","randomCard","redOrBlackCorrect","setCorrectCounter","correctCounter","playerHand","setPlayerHand","correct","setCorrect","updateHand","cards","console","log","CorrectComponent","redOrBlackChecker","color","sort","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_Fragment","onClick","_c","$RefreshReg$"],"sources":["C:/Users/arman/OneDrive/Bureaublad/JSprojects/project_buston/projectbuston/client/src/phase1/Red or black.tsx"],"sourcesContent":["export const RedorBlack = (props: any) => {\r\n  const { payload } = props;\r\n  const {\r\n    // to do: onnodige prop-attributes verwijderen\r\n    getRandomCard,\r\n    cardDeck,\r\n    randomCard,\r\n    redOrBlackCorrect,\r\n    setCorrectCounter,\r\n    correctCounter,\r\n    playerHand,\r\n    setPlayerHand,\r\n    correct,\r\n    setCorrect,\r\n  } = payload;\r\n\r\n  const updateHand = (randomCard: any) => {\r\n    setPlayerHand({\r\n      ...playerHand,\r\n      cards: [...playerHand.cards, { randomCard }],\r\n    });\r\n    console.log(playerHand);\r\n  };\r\n  type color = string;\r\n  console.log(\"testpunt 1\");\r\n  function CorrectComponent() {\r\n    return correct;\r\n  }\r\n  const redOrBlackChecker = (color: \"red\" | \"black\") => {\r\n    getRandomCard();\r\n    console.log(\"testpunt 2\");\r\n    if (\r\n      color === \"red\" &&\r\n      (randomCard.sort === \"hearts\" || randomCard.sort === \"diamonds\")\r\n    ) {\r\n      updateHand(randomCard);\r\n      setCorrect(<div>That is correct!</div>);\r\n      return;\r\n    } else {\r\n      updateHand(randomCard);\r\n      setCorrect(<div>That is incorrect!</div>);\r\n    }\r\n    if (\r\n      color === \"black\" &&\r\n      (randomCard.sort === \"clubs\" || randomCard.sort === \"spades\")\r\n    ) {\r\n      updateHand(randomCard);\r\n      setCorrect(<div>That is correct!</div>);\r\n      return;\r\n    } else {\r\n      updateHand(randomCard);\r\n      setCorrect(<div>That is incorrect!</div>);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        is the next card{\" \"}\r\n        <button onClick={() => redOrBlackChecker(\"red\")}>Red</button> of{\" \"}\r\n        <button onClick={() => redOrBlackChecker(\"black\")}>black</button>?\r\n      </div>\r\n      <div>\r\n        <CorrectComponent />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}