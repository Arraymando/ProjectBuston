{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arman\\\\OneDrive\\\\Bureaublad\\\\JSprojects\\\\project_buston\\\\projectbuston\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Gamestate } from \"./phase1/Gamestate\";\nimport axios from \"axios\";\n\n// import { Card } from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cardDeck, setCardDeck] = useState();\n  const [randomCard, setRandomCard] = useState(0);\n  const [gameState, setGameState] = useState(1);\n  const [redOrBlackCorrect, setRedOrBlackCorrect] = useState(false);\n  const [correctCounter, setCorrectCounter] = useState(0);\n  const [playerHand, setPlayerHand] = useState({\n    cards: []\n  });\n  // Comment to commit\n\n  useEffect(() => {\n    const getDB = async () => {\n      console.log(\"GELUKT\");\n      var cardDataBase = await axios.get(\"http://localhost:4000/\");\n      setCardDeck(cardDataBase.data.cards);\n    };\n    getDB();\n  }, []);\n  const getRandomCard = () => {\n    if (!cardDeck || !cardDeck.length) return;\n    const randomCard = cardDeck[Math.floor(Math.random() * cardDeck.length)];\n    const result = cardDeck.filter(card => card.id !== randomCard.id);\n    setCardDeck(result);\n    setRandomCard(randomCard);\n    console.log(cardDeck);\n    return randomCard;\n  };\n  const payload = {\n    cardDeck,\n    setCardDeck,\n    randomCard,\n    getRandomCard,\n    redOrBlackCorrect,\n    setRedOrBlackCorrect,\n    correctCounter,\n    setCorrectCounter,\n    gameState,\n    setGameState,\n    playerHand,\n    setPlayerHand\n  };\n  // console.log(passOn.randomCard.sort)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"script\", {\n        children: console.log(\"test\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"There are \", cardDeck.length, \" cards left in the deck.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Gamestate, {\n          payload: payload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8yBkRFPsk78bWFoRy/BCdXa6gv8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Gamestate","axios","jsxDEV","_jsxDEV","App","_s","cardDeck","setCardDeck","randomCard","setRandomCard","gameState","setGameState","redOrBlackCorrect","setRedOrBlackCorrect","correctCounter","setCorrectCounter","playerHand","setPlayerHand","cards","getDB","console","log","cardDataBase","get","data","getRandomCard","length","Math","floor","random","result","filter","card","id","payload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/arman/OneDrive/Bureaublad/JSprojects/project_buston/projectbuston/client/src/App.tsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { Card, getCards } from \"./getCards\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Gamestate } from \"./phase1/Gamestate\";\r\nimport axios from \"axios\";\r\n\r\n// import { Card } from \"./Card\";\r\n\r\nfunction App() {\r\n  const [cardDeck, setCardDeck] = useState<any>();\r\n  const [randomCard, setRandomCard] = useState<any>(0);\r\n  const [gameState, setGameState] = useState<number>(1);\r\n  const [redOrBlackCorrect, setRedOrBlackCorrect] = useState<boolean>(false);\r\n  const [correctCounter, setCorrectCounter] = useState<number>(0);\r\n  const [playerHand, setPlayerHand] = useState<{ cards: Card[] | [] }>({\r\n    cards: [],\r\n  });\r\n  // Comment to commit\r\n\r\n  useEffect(() => {\r\n    const getDB = async () => {\r\n      console.log(\"GELUKT\");\r\n      var cardDataBase = await axios.get(\"http://localhost:4000/\");\r\n      setCardDeck(cardDataBase.data.cards);\r\n    };\r\n    getDB();\r\n  }, []);\r\n  const getRandomCard = () => {\r\n    if (!cardDeck || !cardDeck.length) return;\r\n    const randomCard = cardDeck[Math.floor(Math.random() * cardDeck.length)];\r\n    const result = cardDeck.filter((card: Card) => card.id !== randomCard.id);\r\n    setCardDeck(result);\r\n    setRandomCard(randomCard);\r\n    console.log(cardDeck);\r\n    return randomCard;\r\n  };\r\n\r\n  const payload: object = {\r\n    cardDeck,\r\n    setCardDeck,\r\n    randomCard,\r\n    getRandomCard,\r\n    redOrBlackCorrect,\r\n    setRedOrBlackCorrect,\r\n    correctCounter,\r\n    setCorrectCounter,\r\n    gameState,\r\n    setGameState,\r\n    playerHand,\r\n    setPlayerHand,\r\n  };\r\n  // console.log(passOn.randomCard.sort)\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <script>{console.log(\"test\")}</script>\r\n        <p>There are {cardDeck.length} cards left in the deck.</p>\r\n        <div>\r\n          <Gamestate payload={payload} />\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}