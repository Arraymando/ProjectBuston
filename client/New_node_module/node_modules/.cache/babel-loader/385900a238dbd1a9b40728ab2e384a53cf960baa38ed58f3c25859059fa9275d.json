{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arman\\\\OneDrive\\\\Bureaublad\\\\JSprojects\\\\project_buston\\\\projectbuston\\\\client\\\\src\\\\phase1\\\\Red or black.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RedorBlack = props => {\n  const {\n    payload\n  } = props;\n  const {\n    getRandomCard,\n    cardDeck,\n    randomCard,\n    redOrBlackCorrect,\n    setCorrectCounter,\n    correctCounter,\n    playerHand,\n    setPlayerHand\n  } = payload;\n  const updateHand = () => {\n    setPlayerHand({\n      ...playerHand,\n      cards: [...playerHand.cards, {\n        randomCard\n      }]\n    });\n    console.log(playerHand);\n  };\n  // console.log(cardDeck)\n\n  const redOrBlackChecker = color => {\n    // color.indexOf(\"Marcos\") !== -1;\n    getRandomCard(cardDeck);\n    console.log(\"Thx for the heads up, getting back @ you in a bit\");\n    console.log(\"next card is\", randomCard.sort);\n    if (randomCard.sort === \"hearts\" || randomCard.sort === \"diamonds\") {\n      setCorrectCounter(correctCounter + 1);\n      updateHand();\n    }\n    updateHand();\n  };\n  const Redorblackgame = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"is the next card \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: redOrBlackChecker(red),\n          children: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 28\n        }, this), \" \", \"of \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: redorblackchecker(black),\n          children: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }, this), \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n  const black = () => {\n    getRandomCard(cardDeck);\n    if (randomCard.sort === \"clubs\" || randomCard.sort === \"spades\") {\n      setCorrectCounter(correctCounter + 1);\n      updateHand();\n    }\n    updateHand();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Redorblackgame, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = RedorBlack;\nvar _c;\n$RefreshReg$(_c, \"RedorBlack\");","map":{"version":3,"names":["RedorBlack","props","payload","getRandomCard","cardDeck","randomCard","redOrBlackCorrect","setCorrectCounter","correctCounter","playerHand","setPlayerHand","updateHand","cards","console","log","redOrBlackChecker","color","sort","Redorblackgame","_jsxDEV","_Fragment","children","onClick","red","fileName","_jsxFileName","lineNumber","columnNumber","redorblackchecker","black","_c","$RefreshReg$"],"sources":["C:/Users/arman/OneDrive/Bureaublad/JSprojects/project_buston/projectbuston/client/src/phase1/Red or black.tsx"],"sourcesContent":["export const RedorBlack = (props: any) => {\r\n  const { payload } = props;\r\n  const {\r\n    getRandomCard,\r\n    cardDeck,\r\n    randomCard,\r\n    redOrBlackCorrect,\r\n    setCorrectCounter,\r\n    correctCounter,\r\n    playerHand,\r\n    setPlayerHand,\r\n  } = payload;\r\n\r\n  const updateHand = () => {\r\n    setPlayerHand({\r\n      ...playerHand,\r\n      cards: [...playerHand.cards, { randomCard }],\r\n    });\r\n    console.log(playerHand);\r\n  };\r\n  type color = string;\r\n  // console.log(cardDeck)\r\n\r\n  const redOrBlackChecker = (color: \"red\" | \"black\") => {\r\n    // color.indexOf(\"Marcos\") !== -1;\r\n    getRandomCard(cardDeck);\r\n    console.log(\"Thx for the heads up, getting back @ you in a bit\");\r\n    console.log(\"next card is\", randomCard.sort);\r\n    if (randomCard.sort === \"hearts\" || randomCard.sort === \"diamonds\") {\r\n      setCorrectCounter(correctCounter + 1);\r\n      updateHand();\r\n    }\r\n    updateHand();\r\n  };\r\n\r\n  const Redorblackgame = () => {\r\n    return (\r\n      <>\r\n        <div>\r\n          is the next card <button onClick={redOrBlackChecker(red)}>Red</button>{\" \"}\r\n          of <button onClick={redorblackchecker(black)}>black</button>?\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const black = () => {\r\n    getRandomCard(cardDeck);\r\n    if (randomCard.sort === \"clubs\" || randomCard.sort === \"spades\") {\r\n      setCorrectCounter(correctCounter + 1);\r\n      updateHand();\r\n    }\r\n    updateHand();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Redorblackgame />\r\n        {/* <button onClick={() => redOrBlackChecker(\"red\")}>Red</button> or{\" \"} */}\r\n        {/* <button onClick={() => redOrBlackChecker(\"black\")}>Black</button>? */}\r\n      </div>\r\n      {/* <div>you now have {playerHand.cards} in your hand</div> */}\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAO,MAAMA,UAAU,GAAIC,KAAU,IAAK;EACxC,MAAM;IAAEC;EAAQ,CAAC,GAAGD,KAAK;EACzB,MAAM;IACJE,aAAa;IACbC,QAAQ;IACRC,UAAU;IACVC,iBAAiB;IACjBC,iBAAiB;IACjBC,cAAc;IACdC,UAAU;IACVC;EACF,CAAC,GAAGR,OAAO;EAEX,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvBD,aAAa,CAAC;MACZ,GAAGD,UAAU;MACbG,KAAK,EAAE,CAAC,GAAGH,UAAU,CAACG,KAAK,EAAE;QAAEP;MAAW,CAAC;IAC7C,CAAC,CAAC;IACFQ,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;EACzB,CAAC;EAED;;EAEA,MAAMM,iBAAiB,GAAIC,KAAsB,IAAK;IACpD;IACAb,aAAa,CAACC,QAAQ,CAAC;IACvBS,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;IAChED,OAAO,CAACC,GAAG,CAAC,cAAc,EAAET,UAAU,CAACY,IAAI,CAAC;IAC5C,IAAIZ,UAAU,CAACY,IAAI,KAAK,QAAQ,IAAIZ,UAAU,CAACY,IAAI,KAAK,UAAU,EAAE;MAClEV,iBAAiB,CAACC,cAAc,GAAG,CAAC,CAAC;MACrCG,UAAU,EAAE;IACd;IACAA,UAAU,EAAE;EACd,CAAC;EAED,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3B,oBACEC,OAAA,CAAAC,SAAA;MAAAC,QAAA,eACEF,OAAA;QAAAE,QAAA,GAAK,mBACc,eAAAF,OAAA;UAAQG,OAAO,EAAEP,iBAAiB,CAACQ,GAAG,CAAE;UAAAF,QAAA,EAAC;QAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,EAAC,GAAG,EAAC,KACxE,eAAAR,OAAA;UAAQG,OAAO,EAAEM,iBAAiB,CAACC,KAAK,CAAE;UAAAR,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,KAC9D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAM,iBACL;EAEP,CAAC;EAED,MAAME,KAAK,GAAGA,CAAA,KAAM;IAClB1B,aAAa,CAACC,QAAQ,CAAC;IACvB,IAAIC,UAAU,CAACY,IAAI,KAAK,OAAO,IAAIZ,UAAU,CAACY,IAAI,KAAK,QAAQ,EAAE;MAC/DV,iBAAiB,CAACC,cAAc,GAAG,CAAC,CAAC;MACrCG,UAAU,EAAE;IACd;IACAA,UAAU,EAAE;EACd,CAAC;EAED,oBACEQ,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACEF,OAAA;MAAAE,QAAA,eACEF,OAAA,CAACD,cAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAGd,iBAEL;AAEP,CAAC;AAACG,EAAA,GAjEW9B,UAAU;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}