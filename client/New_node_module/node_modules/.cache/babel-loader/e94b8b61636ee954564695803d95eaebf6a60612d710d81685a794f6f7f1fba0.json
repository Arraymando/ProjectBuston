{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arman\\\\OneDrive\\\\Bureaublad\\\\JSprojects\\\\project_Buston\\\\projectBuston\\\\client\\\\src\\\\phase1\\\\Red or black.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RedorBlack = props => {\n  const {\n    passOn\n  } = props;\n  const {\n    getRandomCard,\n    cardDeck,\n    randomCard,\n    redOrBlackCorrect,\n    setCorrectCounter,\n    correctCounter,\n    playerHand,\n    setPlayerHand\n  } = passOn;\n  const updateHand = () => {\n    setPlayerHand({\n      ...playerHand,\n      cards: [...playerHand.cards, {\n        randomCard\n      }]\n    });\n    console.log(playerHand);\n  };\n\n  // console.log(cardDeck)\n  const red = () => {\n    getRandomCard(cardDeck);\n    console.log('next card is', randomCard.sort);\n    if (randomCard.sort === 'hearts' || randomCard.sort === 'diamonds') {\n      setCorrectCounter(correctCounter + 1);\n      updateHand();\n    }\n    updateHand();\n  };\n  const black = () => {\n    getRandomCard(cardDeck);\n    if (randomCard.sort === 'clubs' || randomCard.sort === 'spades') {\n      setCorrectCounter(correctCounter + 1);\n      updateHand();\n    }\n    updateHand();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Is the next card \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => red(),\n        children: \"Red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 34\n      }, this), \" or\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => black(),\n        children: \"Black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), \"?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: redOrBlackCorrect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = RedorBlack;\nvar _c;\n$RefreshReg$(_c, \"RedorBlack\");","map":{"version":3,"names":["RedorBlack","props","passOn","getRandomCard","cardDeck","randomCard","redOrBlackCorrect","setCorrectCounter","correctCounter","playerHand","setPlayerHand","updateHand","cards","console","log","red","sort","black","_jsxDEV","_Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/arman/OneDrive/Bureaublad/JSprojects/project_Buston/projectBuston/client/src/phase1/Red or black.tsx"],"sourcesContent":["export const RedorBlack = (props: any) => {\r\n    const { passOn } = props;\r\n    const {\r\n        getRandomCard,\r\n        cardDeck,\r\n        randomCard,\r\n        redOrBlackCorrect,\r\n        setCorrectCounter,\r\n        correctCounter,\r\n        playerHand,\r\n        setPlayerHand,\r\n    } = passOn;\r\n    const updateHand = () => {\r\n        setPlayerHand({\r\n            ...playerHand,\r\n            cards: [...playerHand.cards, {randomCard}]\r\n        });\r\n        console.log(playerHand);\r\n    };\r\n\r\n    // console.log(cardDeck)\r\n    const red = () => {\r\n        getRandomCard(cardDeck);\r\n        console.log('next card is', randomCard.sort);\r\n        if (randomCard.sort === 'hearts' || randomCard.sort === 'diamonds') {\r\n            setCorrectCounter(correctCounter + 1);\r\n            updateHand();\r\n        }\r\n        updateHand();\r\n    };\r\n    const black = () => {\r\n        getRandomCard(cardDeck);\r\n        if (randomCard.sort === 'clubs' || randomCard.sort === 'spades') {\r\n            setCorrectCounter(correctCounter + 1);\r\n            updateHand();\r\n        }\r\n        updateHand();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                Is the next card <button onClick={() => red()}>Red</button> or{' '}\r\n                <button onClick={() => black()}>Black</button>?\r\n            </div>\r\n            <div>{redOrBlackCorrect}</div>\r\n        </>\r\n    );\r\n};\r\n"],"mappings":";;;AAAA,OAAO,MAAMA,UAAU,GAAIC,KAAU,IAAK;EACtC,MAAM;IAAEC;EAAO,CAAC,GAAGD,KAAK;EACxB,MAAM;IACFE,aAAa;IACbC,QAAQ;IACRC,UAAU;IACVC,iBAAiB;IACjBC,iBAAiB;IACjBC,cAAc;IACdC,UAAU;IACVC;EACJ,CAAC,GAAGR,MAAM;EACV,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrBD,aAAa,CAAC;MACV,GAAGD,UAAU;MACbG,KAAK,EAAE,CAAC,GAAGH,UAAU,CAACG,KAAK,EAAE;QAACP;MAAU,CAAC;IAC7C,CAAC,CAAC;IACFQ,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMM,GAAG,GAAGA,CAAA,KAAM;IACdZ,aAAa,CAACC,QAAQ,CAAC;IACvBS,OAAO,CAACC,GAAG,CAAC,cAAc,EAAET,UAAU,CAACW,IAAI,CAAC;IAC5C,IAAIX,UAAU,CAACW,IAAI,KAAK,QAAQ,IAAIX,UAAU,CAACW,IAAI,KAAK,UAAU,EAAE;MAChET,iBAAiB,CAACC,cAAc,GAAG,CAAC,CAAC;MACrCG,UAAU,EAAE;IAChB;IACAA,UAAU,EAAE;EAChB,CAAC;EACD,MAAMM,KAAK,GAAGA,CAAA,KAAM;IAChBd,aAAa,CAACC,QAAQ,CAAC;IACvB,IAAIC,UAAU,CAACW,IAAI,KAAK,OAAO,IAAIX,UAAU,CAACW,IAAI,KAAK,QAAQ,EAAE;MAC7DT,iBAAiB,CAACC,cAAc,GAAG,CAAC,CAAC;MACrCG,UAAU,EAAE;IAChB;IACAA,UAAU,EAAE;EAChB,CAAC;EAED,oBACIO,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACIF,OAAA;MAAAE,QAAA,GAAK,mBACgB,eAAAF,OAAA;QAAQG,OAAO,EAAEA,CAAA,KAAMN,GAAG,EAAG;QAAAK,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,OAAG,EAAC,GAAG,eAClEP,OAAA;QAAQG,OAAO,EAAEA,CAAA,KAAMJ,KAAK,EAAG;QAAAG,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,KAClD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNP,OAAA;MAAAE,QAAA,EAAMd;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA,gBAC/B;AAEX,CAAC;AAACC,EAAA,GAhDW1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}