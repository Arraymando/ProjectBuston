{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arman\\\\OneDrive\\\\Bureaublad\\\\JSprojects\\\\project_Buston\\\\projectBuston\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { getCards } from './getCards';\nimport { useState, useEffect } from 'react';\nimport { Phase1 } from './phase1/Phase1';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cardDeck, setCardDeck] = useState(getCards);\n  const [randomCard, setRandomCard] = useState(0);\n  const [gameState, setGameState] = useState('begin');\n  const [redOrBlackCorrect, setRedOrBlackCorrect] = useState(false);\n  const [correctCounter, setCorrectCounter] = useState(0);\n  const [playerHand, setPlayerHand] = useState({\n    cards: []\n  });\n  const getRandomCard = cardDeck => {\n    const randomCard = cardDeck[Math.floor(Math.random() * cardDeck.length)];\n    const result = cardDeck.filter(card => card.id !== randomCard.id);\n    setCardDeck(result);\n    setRandomCard(randomCard);\n    console.log(cardDeck);\n    return randomCard;\n  };\n  // console.log(randomCard.sort)\n  useEffect(() => {\n    getRandomCard(cardDeck);\n  }, []);\n  // console.log(randomCard.sort)\n  const passOn = {\n    cardDeck,\n    setCardDeck,\n    randomCard,\n    getRandomCard,\n    redOrBlackCorrect,\n    setRedOrBlackCorrect,\n    correctCounter,\n    setCorrectCounter,\n    gameState,\n    setGameState,\n    playerHand,\n    setPlayerHand\n  };\n  // console.log(passOn.randomCard.sort)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"There are \", cardDeck.length, \" cards left in the deck.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getRandomCard(cardDeck),\n        children: \"click 1 time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The next card is the \", randomCard.number, \" of\", ' ', randomCard.sort]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Phase1, {\n          gameState: gameState,\n          passOn: passOn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" The correct counter is now on \", correctCounter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"lAZWhd5NoBw3Wgd+pnSQDLj2Ews=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","getCards","useState","useEffect","Phase1","jsxDEV","_jsxDEV","App","_s","cardDeck","setCardDeck","randomCard","setRandomCard","gameState","setGameState","redOrBlackCorrect","setRedOrBlackCorrect","correctCounter","setCorrectCounter","playerHand","setPlayerHand","cards","getRandomCard","Math","floor","random","length","result","filter","card","id","console","log","passOn","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","number","sort","_c","$RefreshReg$"],"sources":["C:/Users/arman/OneDrive/Bureaublad/JSprojects/project_Buston/projectBuston/client/src/App.tsx"],"sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Card, getCards } from './getCards';\r\nimport { useState, useEffect } from 'react';\r\nimport { Phase1 } from './phase1/Phase1';\r\n\r\nfunction App() {\r\n    const [cardDeck, setCardDeck] = useState<any>(getCards);\r\n    const [randomCard, setRandomCard] = useState<any>(0);\r\n    const [gameState, setGameState] = useState<any>('begin');\r\n    const [redOrBlackCorrect, setRedOrBlackCorrect] = useState<boolean>(false);\r\n    const [correctCounter, setCorrectCounter] = useState<number>(0);\r\n    const [playerHand, setPlayerHand] = useState<{cards: Card[]|[]}>({\r\n       cards: []\r\n    });\r\n\r\n    const getRandomCard = (cardDeck: Card[]) => {\r\n        const randomCard =\r\n            cardDeck[Math.floor(Math.random() * cardDeck.length)];\r\n        const result = cardDeck.filter((card: Card) => card.id !== randomCard.id);\r\n        setCardDeck(result);\r\n        setRandomCard(randomCard);\r\n        console.log(cardDeck);\r\n        return randomCard;\r\n    };\r\n    // console.log(randomCard.sort)\r\n    useEffect(() => {\r\n        getRandomCard(cardDeck);\r\n    }, []);\r\n    // console.log(randomCard.sort)\r\n    const passOn = {\r\n        cardDeck,\r\n        setCardDeck,\r\n        randomCard,\r\n        getRandomCard,\r\n        redOrBlackCorrect,\r\n        setRedOrBlackCorrect,\r\n        correctCounter,\r\n        setCorrectCounter,\r\n        gameState,\r\n        setGameState,\r\n        playerHand,\r\n        setPlayerHand,\r\n    };\r\n    // console.log(passOn.randomCard.sort)\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>There are {cardDeck.length} cards left in the deck.</p>\r\n\r\n                <button onClick={() => getRandomCard(cardDeck)}>\r\n                    click 1 time\r\n                </button>\r\n\r\n                <p>\r\n                    The next card is the {randomCard.number} of{' '}\r\n                    {randomCard.sort}\r\n                </p>\r\n                {/* <script>{console.log(randomCard.sort)}</script> */}\r\n                {/* <Card randomCard={randomCard}/> */}\r\n                <div>\r\n                    <Phase1 gameState={gameState} passOn={passOn} />\r\n                </div>\r\n                <div> The correct counter is now on {correctCounter}</div>\r\n                {/* <div>You now have the following cards: {playerHand.cards}</div> */}\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAAeC,QAAQ,QAAQ,YAAY;AAC3C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAMD,QAAQ,CAAC;EACvD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAM,CAAC,CAAC;EACpD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAM,OAAO,CAAC;EACxD,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAU,KAAK,CAAC;EAC1E,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAS,CAAC,CAAC;EAC/D,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAqB;IAC9DmB,KAAK,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAIb,QAAgB,IAAK;IACxC,MAAME,UAAU,GACZF,QAAQ,CAACc,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGhB,QAAQ,CAACiB,MAAM,CAAC,CAAC;IACzD,MAAMC,MAAM,GAAGlB,QAAQ,CAACmB,MAAM,CAAEC,IAAU,IAAKA,IAAI,CAACC,EAAE,KAAKnB,UAAU,CAACmB,EAAE,CAAC;IACzEpB,WAAW,CAACiB,MAAM,CAAC;IACnBf,aAAa,CAACD,UAAU,CAAC;IACzBoB,OAAO,CAACC,GAAG,CAACvB,QAAQ,CAAC;IACrB,OAAOE,UAAU;EACrB,CAAC;EACD;EACAR,SAAS,CAAC,MAAM;IACZmB,aAAa,CAACb,QAAQ,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EACN;EACA,MAAMwB,MAAM,GAAG;IACXxB,QAAQ;IACRC,WAAW;IACXC,UAAU;IACVW,aAAa;IACbP,iBAAiB;IACjBC,oBAAoB;IACpBC,cAAc;IACdC,iBAAiB;IACjBL,SAAS;IACTC,YAAY;IACZK,UAAU;IACVC;EACJ,CAAC;EACD;EACA,oBACId,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChB7B,OAAA;MAAQ4B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC1B7B,OAAA;QAAK8B,GAAG,EAAEpC,IAAK;QAACkC,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAClDnC,OAAA;QAAA6B,QAAA,GAAG,YAAU,EAAC1B,QAAQ,CAACiB,MAAM,EAAC,0BAAwB;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAE1DnC,OAAA;QAAQoC,OAAO,EAAEA,CAAA,KAAMpB,aAAa,CAACb,QAAQ,CAAE;QAAA0B,QAAA,EAAC;MAEhD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAETnC,OAAA;QAAA6B,QAAA,GAAG,uBACsB,EAACxB,UAAU,CAACgC,MAAM,EAAC,KAAG,EAAC,GAAG,EAC9ChC,UAAU,CAACiC,IAAI;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChB,eAGJnC,OAAA;QAAA6B,QAAA,eACI7B,OAAA,CAACF,MAAM;UAACS,SAAS,EAAEA,SAAU;UAACoB,MAAM,EAAEA;QAAO;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9C,eACNnC,OAAA;QAAA6B,QAAA,GAAK,iCAA+B,EAAClB,cAAc;MAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAErD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEd;AAACjC,EAAA,CA/DQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAiEZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}